// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int          @id @default(autoincrement())
  login      String
  pass       String
  UserInfo   UserInfo?
  finals     Final[]
  races      RaceMember[]
  cars       Car[]
  team       Team[]
  StageTeam  StageTeam[]
  TeamOnUser TeamOnUser[]
}

model Team {
  id         Int          @id @default(autoincrement())
  name       String       @unique
  members    User[]
  StageTeam  StageTeam[]
  TeamOnUser TeamOnUser[]
}

model TeamOnUser {
  member User    @relation(fields: [userId], references: [id])
  team   Team    @relation(fields: [teamId], references: [id])
  owner  Boolean @default(false)
  userId Int
  teamId Int

  @@id([userId, teamId])
}

model UserInfo {
  id     Int    @id @default(autoincrement())
  name   String
  city   String
  phone  String
  user   User   @relation(fields: [userId], references: [id])
  userId Int    @unique
}

model Season {
  id     Int     @id @default(autoincrement())
  year   Int     @db.Year
  stages Stage[]
}

model Stage {
  id        Int         @id @default(autoincrement())
  date      DateTime
  place     String
  Season    Season?     @relation(fields: [seasonId], references: [id])
  seasonId  Int?
  races     Race[]
  finalists Final[]
  StageTeam StageTeam[]
}

model CarClass {
  id    Int    @id @default(autoincrement())
  name  String
  code  String
  races Race[]
}

model Race {
  id         Int          @id @default(autoincrement())
  Stage      Stage?       @relation(fields: [stageId], references: [id])
  stageId    Int?
  CarClass   CarClass?    @relation(fields: [carClassId], references: [id])
  carClassId Int?
  results    RaceResult[]
  members    RaceMember[]
}

model Final {
  id    Int @id @default(autoincrement())
  place Int @db.UnsignedTinyInt

  User    User?  @relation(fields: [userId], references: [id])
  userId  Int?
  Stage   Stage? @relation(fields: [stageId], references: [id])
  stageId Int?
}

model RaceResult {
  id         Int        @id @default(autoincrement())
  result     Result
  Race       Race?      @relation(fields: [raceId], references: [id])
  raceId     Int?
  RaceMember RaceMember @relation(fields: [memberId], references: [id])
  memberId   Int        @unique
}

model RaceMember {
  id Int @id @default(autoincrement())

  User   User?       @relation(fields: [userId], references: [id])
  userId Int?
  Race   Race?       @relation(fields: [raceId], references: [id])
  raceId Int?
  Car    Car?        @relation(fields: [carId], references: [id])
  carId  Int?
  result RaceResult?
}

model Car {
  id     Int          @id @default(autoincrement())
  name   String
  model  String
  number String
  color  String
  races  RaceMember[]
  User   User?        @relation(fields: [userId], references: [id])
  userId Int?
}

model StageTeam {
  id      Int   @id @default(autoincrement())
  team    Team  @relation(fields: [teamId], references: [id])
  teamId  Int
  stage   Stage @relation(fields: [stageId], references: [id])
  stageId Int
  user    User? @relation(fields: [userId], references: [id])
  userId  Int?
}

enum Result {
  WINNER
  LOOSER
  TIE_GAME
}
